---
version: 1
interactions:
# requests to retrieve the user from auth service, given his/her ID
- request:
    method: GET
    url: http://authservice/api/users/0443beeb-1cfb-427f-bd7c-d22d941bea4f
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
      "data": {
        "attributes": {
          "username": "user_with_namespace2",
          "email": "user_with_namespace2@bar.com",
      	  "cluster": "http://api.cluster1/"
        }
      }
    }'

# requests to retrieve the list of clusters configured in `auth` service
- request:
    method: GET
    url: http://authservice/api/clusters/
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "data":[
        {
          "name": "cluster_name",
          "api-url": "http://api.cluster1/",
          "console-url": "http://console.cluster1/",
          "metrics-url": "http://metrics.cluster1/",
          "logging-url": "http://logs.cluster1/",
          "app-dns": "foo"
        }
      ]
    }'

# requests to resolve the user's token on his/her target cluster
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster1%2F&force_pull=false
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with encrypted token for the "tenant service" account
    body: '{ 
			"token_type": "bearer",
			"username": "devtools-sre",
      "access_token": "jA0ECQMCWbHrs0GtZQlg0sDQAYMwVoNofrjMocCLv5+FR4GkCPEOiKvK6ifRVsZ6VWLcBVF5k/MFO0Y3EmE8O77xDFRvA9AVPETb7M873tGXMEmqFjgpWvppN81zgmk/enaeJbTBeYhXScyShw7G7kIbgaRy2ufPzVj7f2muM0PHRS334xOVtWZIuaq4lP7EZvW4u0JinSVT0oIHBoCKDFlMlNS1sTygewyI3QOX1quLEEhaDr6/eTG66aTfqMYZQpM4B+m78mi02GLPx3Z24DpjzgshagmGQ8f2kj49QA0LbbFaCUvpqlyStkXNwFm7z+Vuefpp+XYGbD+8MfOKsQxDr7S6ziEdjs+zt/QAr1ZZyoPsC4TaE6kkY1JHIIcrdO5YoX6mbxDMdkLY1ybMN+qMNKtVW4eV9eh34fZKUJ6sjTfdaZ8DjN+rGDKMtZDqwa1h+YYz938jl/bRBEQjK479o7Y6Iu/v4Rwn4YjM4YGjlXs/T/rUO1uye3AWmVNFfi6GtqNpbsKEbkr80WKOOWiSuYeZHbXA7pWMit17U9LtUA=="
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster1%2F&force_pull=false
    headers:
      sub: ["0443beeb-1cfb-427f-bd7c-d22d941bea4f"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with plaintext token for the "user" account
    body: '{ 
      "token_type": "bearer",
      "username": "user_with_namespace2",
      "access_token": "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJfd2l0aF9uYW1lc3BhY2UyQGJhci5jb20iLCJzdWIiOiIwNDQzYmVlYi0xY2ZiLTQyN2YtYmQ3Yy1kMjJkOTQxYmVhNGYifQ.DM5TJFNr5aQTx3rR77QB2wc7Q2Cz27yNr6_hGM1srQRsNKbBlPTtp77N3WGjrZqNFZi6PrMNkWMLxL79XzIJ3M8mIIL5QPhZ77AYB8x2BAFFnGXdFoy40U59EH3d0gBqbxON9-jHLWL15JiK9pcXM0a2SyyuKHTyGDcUELaMMdhXs_M0L7nYiLeh1-Lj6qgk5DfUU_QqvYcl4pHsdG2LInA5odcrEfYgo9-CE0ZSuzXx2TK614-_rQCDBNs4t9EnXyNF_T5-aggyQY5yn_WgC7hADORagLFOQez_X8VdSmB_FdsZco4S-rCct9R-zf3CuZxQ1geQlcMijoc4vws"
    }'

# requests to verify that the token is still valid, using the `whoami` API on the user's target cluster
- request:
    method: GET
    url: http://api.cluster1/apis/user.openshift.io/v1/users/~
    headers:
      sub: ["devtools-sre"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "kind":"User",
      "apiVersion":"user.openshift.io/v1",
      "metadata":{
        "name":"devtools-sre",
      },
      "identities":[],
      "groups":[]
    }'

# set of requests for the init tenant API calls on the target (OSO) cluster for user 0443beeb-1cfb-427f-bd7c-d22d941bea4f
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/projectrequests
    headers:
      sub: ["0443beeb-1cfb-427f-bd7c-d22d941bea4f"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 409 Conflict
    code: 409
    body: |
      metadata: {}
      status: Failure
      message: project.project.openshift.io "user_with_namespace2" already exists
      reason: AlreadyExists
      details:
        name: user_with_namespace2
        group: project.openshift.io
        kind: project
      code: 409'


