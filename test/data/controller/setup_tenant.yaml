---
version: 1
interactions:
# requests to retrieve the user from auth service, given his/her ID
- request:
    method: GET
    url: http://authservice/api/users/83fdcae2-634f-4a52-958a-f723cb621700
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
      "data": {
        "attributes": {
          "username": "user_foo",
          "email": "user_foo@bar.com",
      	  "cluster": "http://api.cluster1/"
        }
      }
    }'
- request:
    method: GET
    url: http://authservice/api/users/38b33b8b-996d-4ba4-b565-f32a526de85c
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
      "data": {
        "attributes": {
          "username": "user_foo2",
          "email": "user_foo2@bar.com",
      	  "cluster": "http://api.cluster1/"
        }
      }
    }'
- request:
    method: GET
    url: http://authservice/api/users/526ea9ac-0cf7-4e12-a835-0b76eab45517
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
      "data": {
        "attributes": {
          "username": "user_unknown_cluster",
          "email": "user_unknown_cluster@bar.com",
      	  "cluster": "http://api.cluster.unknown/"
        }
      }
    }'
- request:
    method: GET
    url: http://authservice/api/users/02a6474c-3b04-4dc4-bfd2-4867102581e0
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
      "data": {
        "attributes": {
          "username": "user_with_namespace",
          "email": "user_with_namespace@bar.com",
      	  "cluster": "http://api.cluster1/"
        }
      }
    }'

# requests to retrieve the list of clusters configured in `auth` service
- request:
    method: GET
    url: http://authservice/api/clusters/
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "data":[
        {
          "name": "cluster_name",
          "api-url": "http://api.cluster1/",
          "console-url": "http://console.cluster1/",
          "metrics-url": "http://metrics.cluster1/",
          "logging-url": "http://logs.cluster1/",
          "app-dns": "foo"
        }
      ]
    }'

# requests to resolve the user's token on his/her target cluster
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster1%2F&force_pull=false
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with encrypted token for the "tenant service" account
    body: '{ 
			"token_type": "bearer",
			"username": "tenant_service",
			"access_token": "jA0ECQMCbp6BH9LCNqNg0sDNAcVRutDsLnJvXYKwHnaQ+7K5kJEw4HOIFRLp77nfh/3CSnNBgY2gZc8d/o0gYww01C4LpUdvyPB/m/Mohp1/yQ2ErIsJDSiYWBgVA/sUPhZf3vY/JYDfg4XOMVA28C7L3ritvlzHT2IwQkZw65NPnJRNvaFA+5fSNqR5XUIKZ84kWotIpyvTwzS/4yAjVAlnu6W/hU6SRDfABPH3Tw/QJPigoRpwyLzN7hVprfXW7Kq54Qx/tmYmceeals0DYfuThKDfx7r2LHW0Yq6A5yzzkKueUaEm4sqJhGkdwf1LsOa+F+/T5MMT7DCiaX88FOkVuQ6cgmCGWbVz5x4fo9fEIy0f56WQAOZwR8clHXS6/pSuj4R5axeX67e3ijAZokiTi3eGCvVmgo2Zb/I49oXCreZQ6kUDQUvu/lwcBDxnrZeOcpftb0OiGNWvCdjwinxgRf0n3FgK+ZYcTxpdYewgOKTauCDhC64rf6hYeV72r6/416zRiaQrvatfJEXLC7mtw1qmALP64WBJOxqpkw=="
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster1%2F&force_pull=false
    headers:
      sub: ["83fdcae2-634f-4a52-958a-f723cb621700"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with plaintext token for the "user" account
    body: '{ 
      "token_type": "bearer",
      "username": "user_foo",
      "access_token": "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJfZm9vQGJhci5jb20iLCJzdWIiOiI4M2ZkY2FlMi02MzRmLTRhNTItOTU4YS1mNzIzY2I2MjE3MDAifQ.B7NvUSO3I30Ois-YUHm7a5iZfcamgwzMXUehtA5R1XTPLVn4F_QK7e0jrN0ZG4GrOrX6TFgmewL8yeSQMBTsf5iCgRSrr11F4wTzrC-MH7v1FizPrhYQ-4wmXcHKB8VtAFqPQnWA1tfHcr32MVVh9lXLD3KJJbB6TYFq8eVsMGyMYcEYWzXgJQOj1UmsTZpH6DBb5YxfM3PzNk_eYH9fKZAH_WntuYnXNGA-iix0RIC43IBPiQ4DTKyIhKq-wDzz7gDCtqpaAwhQyxdcmlty7TudXvJ_c8jahaXQ6fb_eZF-Mhd-gGXtkwjRy41BPEUnPLNXQh7vEjl1ARWami0"
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster1%2F&force_pull=false
    headers:
      sub: ["38b33b8b-996d-4ba4-b565-f32a526de85c"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with plaintext token for the "user" account
    body: '{ 
      "token_type": "bearer",
      "username": "user_foo2",
      "access_token": "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJfZm9vMkBiYXIuY29tIiwic3ViIjoiMzhiMzNiOGItOTk2ZC00YmE0LWI1NjUtZjMyYTUyNmRlODVjIn0.C2vhwU8u-4dflxCvANRYM4YhbxGkQ_VSHgRCoTqNAws-tqs9lD-IHRFNVE5EAz_4ZbPlV_rm3PyuWhUlJRFsItGBAM7Uz8nmRDQlC23QZtJ5FpS1NI_45pYpqFe1VG5DgmyaXGOjrCtdjSgejT7WRGIZM11gFiO-tizyfr6uZKJ-OfMgynQHXrMEhBFnEW6uFRKnzqcQBmIkvn2on1rk7EbCvmzhVM6LlBbPElKTgt94asVAateVPFAVSMXqDiDQCsxYYmsFhxDXPYUjMJabkXQitInyHQeRjhFF9giB0fg57aZ-tOJRBzhm2W7fGXoDC3f_u2VV4kVWF8EhL5I"
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster.unknown%2F&force_pull=false
    headers:
      sub: ["526ea9ac-0cf7-4e12-a835-0b76eab45517"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with plaintext token for the "user" account
    body: '{ 
      "token_type": "bearer",
      "username": "user_unknown_cluster",
      "access_token": "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJfdW5rbm93bl9jbHVzdGVyQGJhci5jb20iLCJzdWIiOiI1MjZlYTlhYy0wY2Y3LTRlMTItYTgzNS0wYjc2ZWFiNDU1MTcifQ.B5IuR1J2_C6x1ZQ6u4CQd7Sl-DQo_I-xm53HkQO0Hsh22nwf_7xeBp6bExRxkrn6I8uGNXOjmYbc5YDL6d_hxpmmw_UYCYyb7Trk4UOJLEz5fUn22ej9xIya4GmiPepGhEPU6Xi6Qv352JhJxssZy41Ba1ecRnEvUolDFRh1i-RfbBMfMBIMy7aYhAYxOMl2satd64TJ465P0HWc0SLUPQeyqPoKCl9ZN_etvSH_c5W9KPxykOhJyWlJVCBZ00bX18sF_WXKzdrZgIz-UpxXtzC7bkyj54VEDL6sVuAUELpTfp0Wq0OcuSBvkt8LGdb9P3VmDFfSzpueGblxa8k"
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=http%3A%2F%2Fapi.cluster1%2F&force_pull=false
    headers:
      sub: ["02a6474c-3b04-4dc4-bfd2-4867102581e0"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    # response with plaintext token for the "user" account
    body: '{ 
      "token_type": "bearer",
      "username": "user_with_namespace",
      "access_token": "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJfbnNfZXhpc3RzQGJhci5jb20iLCJzdWIiOiIwMmE2NDc0Yy0zYjA0LTRkYzQtYmZkMi00ODY3MTAyNTgxZTAifQ.CLyi2xYuF2El8W4js8dJQ_rVy38c7YIBNF5_rlkhhQ_-gllnw1PYNNcaYRbqYZ8dXJ0ZcVDBp1-zMucbP-AV2kn2n8BkzxiK2ohxkpLYtwY9sVTmFgxbOB3REx7WTKCiMuogdAJ1ssC_ze5dsoVmFHACyGeGpaTvMeZh76TnYAcgjgs3iIUEtoAvTRlcZ7HDZPJcOmNmUjnNa6v3JiQeOcBwgq6dW9ye18o2tctcTZx7-aKZNWXUdn1SQipvnZu1ksDNpU-7r_cRhizdrHfgylbNwWV8ZxofOBo_U6Rrb7bSpt2FQ8-9ngyQxPKY6jD_eBxWUbcW3YdyNIryoqA"
    }'

# requests to verify that the token is still valid, using the `whoami` API on the user's target cluster
- request:
    method: GET
    url: http://api.cluster1/apis/user.openshift.io/v1/users/~
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "kind":"User",
      "apiVersion":"user.openshift.io/v1",
      "metadata":{
        "name":"tenant_service",
      },
      "identities":[],
      "groups":[]
    }'

# requests to retrieve the user's list of projects on OSO
- request:
    method: GET
    url: http://api.cluster1/oapi/v1/projects
    headers:
      sub: ["83fdcae2-634f-4a52-958a-f723cb621700"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "kind": "ProjectList",
      "apiVersion": "v1",
      "metadata": {
        "selfLink": "/oapi/v1/projects"
      },
      "items": []
    }'
- request:
    method: GET
    url: http://api.cluster1/oapi/v1/projects
    headers:
      sub: ["38b33b8b-996d-4ba4-b565-f32a526de85c"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "kind": "ProjectList",
      "apiVersion": "v1",
      "metadata": {
        "selfLink": "/oapi/v1/projects"
      },
      "items": [
        {
          "metadata": {
            "name": "user_foo2",
            "selfLink": "/oapi/v1/projects/user_foo2",
            "uid": "51e07e7a-1597-11e7-ad87-0000000000001",
            "resourceVersion": "0",
            "creationTimestamp": "2017-03-30T22:22:11Z",
            "annotations": {
              "openshift.io/description": "",
              "openshift.io/display-name": "",
            }
          },
          "spec": {
            "finalizers": [
              "openshift.io/origin",
              "kubernetes"
            ]
          },
          "status": {
            "phase": "Active"
          }
        }
      ]
    }'
- request:
    method: GET
    url: http://api.cluster1/oapi/v1/projects
    headers:
      sub: ["02a6474c-3b04-4dc4-bfd2-4867102581e0"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
      "kind": "ProjectList",
      "apiVersion": "v1",
      "metadata": {
        "selfLink": "/oapi/v1/projects"
      },
      "items": [
        {
          "metadata": {
            "name": "foo1",
            "selfLink": "/oapi/v1/projects/foo1",
            "uid": "51e07e7a-1597-11e7-ad87-0000000000001",
            "resourceVersion": "0",
            "creationTimestamp": "2017-03-30T22:22:11Z",
            "annotations": {
              "openshift.io/description": "",
              "openshift.io/display-name": "",
            }
          },
          "spec": {
            "finalizers": [
              "openshift.io/origin",
              "kubernetes"
            ]
          },
          "status": {
            "phase": "Active"
          }
        }
      ]
    }'

# set requests for the init tenant API calls on the target (OSO) cluster for user 83fdcae2-634f-4a52-958a-f723cb621700
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/projectrequests
    headers:
      sub: ["83fdcae2-634f-4a52-958a-f723cb621700"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/namespaces/user-foo/rolebindingrestrictions
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/api/v1/namespaces/user-foo/services
    headers:
      sub: ["83fdcae2-634f-4a52-958a-f723cb621700"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/namespaces/user-foo/rolebindings
    headers:
      sub: ["83fdcae2-634f-4a52-958a-f723cb621700"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/api/v1/namespaces/user-foo/configmaps
    headers:
      sub: ["83fdcae2-634f-4a52-958a-f723cb621700"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: DELETE
    url: http://api.cluster1/oapi/v1/namespaces/user-foo/rolebindings/admin
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
# set of requests for the init tenant API calls on the target (OSO) cluster for user 38b33b8b-996d-4ba4-b565-f32a526de85c
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/projectrequests
    headers:
      sub: ["38b33b8b-996d-4ba4-b565-f32a526de85c"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/namespaces/user-foo2/rolebindingrestrictions
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/api/v1/namespaces/user-foo2/services
    headers:
      sub: ["38b33b8b-996d-4ba4-b565-f32a526de85c"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/oapi/v1/namespaces/user-foo2/rolebindings
    headers:
      sub: ["38b33b8b-996d-4ba4-b565-f32a526de85c"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: POST
    url: http://api.cluster1/api/v1/namespaces/user-foo2/configmaps
    headers:
      sub: ["38b33b8b-996d-4ba4-b565-f32a526de85c"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
- request:
    method: DELETE
    url: http://api.cluster1/oapi/v1/namespaces/user-foo2/rolebindings/admin
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
