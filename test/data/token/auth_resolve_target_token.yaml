---
version: 1
interactions:
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=false
    headers:
      sub: ["user_foo"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
			"token_type": "bearer",
			"username": "user_foo",
			"access_token": "an_openshift_token"
		}'
- request:
    method: GET
    url: http://authservice/api/token?for=some_invalid_resource&force_pull=false
    headers:
      sub: ["user_foo"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 400 Bad Request
    code: 400
    body: '{
      "errors":[
        { "code":"bad_parameter",
          "detail":"Bad value for parameter ''for'': ''some_valid_openshift_resource'' (expected: ''URL to a github.com or openshift.com resource'')",
          "status":"400",
          "title":"Bad parameter error"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=false
  response:
    status: 401 Unauthorized
    code: 401
    body: '{
      "errors":[
        { "code":"jwt_security_error",
          "detail":"missing header \"Authorization\"",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=true
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
			"access_token": "jA0ECQMCV1nKvgRtKl1g0sDSAfxyo94B+Mi1erfAyYHddxrqYXHQ7LS+ZhObCbTbYdIxDc5EnGxm68yUbuSf/PARs8ZhHV/8lSPHhLjA1aWjp9SiFtaC+hrx+UEcc55PQ3scUCuDqIaUdJeAt9Nib5D0dZL/Pd4j5kAVQ6Yhu39C4xZlCpGI72UWO6/+BeLLMg5NKmVp+9ouCcVwUgvt5cZLkljC8kSPjX9T6sdb1zU8UFE/zJkr3DNsIPvoxXkbffBjMQ8KlKNbjDF2a/EawKiQU5j47j7issGBwodW1SCyp9Ull2DZ2YkHO1w3BDU/AUQncyRBr+d+SyIh5vId87oP4s2dJCluN8ZaP3uRCCuNUf1nKL1WiYCdxCEezAKOwEYIxFVkIGr4rOvNppkyxdxpW7h+OOOsXUCE5u2RqfmP0KcifT1IlBE2xypmoIHgQ5bBtiVvpH8FPf0uZBX7G7VsS44bedWxNVUp3/vLX4dhzHBQmAQkimNxlT6lhKTZc4j8FY5Nbea0C8wH9o+9qQgpJWoYFfqItF6F+U0KEk1v90Ho",
			"token_type": "bearer",
			"username": "tenant_service"
		}'
- request:
    method: GET
    url: http://authservice/api/token?for=some_invalid_resource&force_pull=true
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 400 Bad Request
    code: 400
    body: '{
      "errors":[
        { "code":"bad_parameter",
          "detail":"Bad value for parameter ''for'': ''some_valid_openshift_resource'' (expected: ''URL to a github.com or openshift.com resource'')",
          "status":"400",
          "title":"Bad parameter error"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=true
  response:
    status: 401 Unauthorized
    code: 401
    body: '{
      "errors":[
        { "code":"jwt_security_error",
          "detail":"missing header \"Authorization\"",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=true
    headers:
      sub: ["expired_tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 401 Unauthorized
    code: 401
    body: '{
      "errors":[
        { "code":"error",
          "detail":"cluster token is invalid or expired",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized"
        }
      ]
    }'